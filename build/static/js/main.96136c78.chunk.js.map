{"version":3,"sources":["components/Clients/ColumnHeaders.js","components/Clients/Row.js","components/Clients/Rows.js","components/Clients/Clients.js","components/Analytics.js","components/Actions/Add.js","components/Actions/Update.js","components/Actions/ClientInput.js","components/Actions/Actions.js","App.js","serviceWorker.js","index.js"],"names":["ColumnHeaders","react_default","a","createElement","className","Component","axios","require","Row","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","updateText","event","setState","defineProperty","target","value","popUp","popup","state","updateClient","asyncToGenerator","regenerator_default","mark","_callee","clientId","country","name","surname","wrap","_context","prev","next","alert","abrupt","props","row","_id","charAt","toUpperCase","slice","put","concat","updateClientScreen","stop","split","r","date","firstContact","onClick","emailType","sold","owner","type","defaultValue","onChange","Rows","componentDidMount","data","get","sent","searchFits","search","toLowerCase","select","includes","displayData","filter","map","Clients_Row","Clients","placeholder","Clients_ColumnHeaders","Clients_Rows","Analytics","Add","addClient","id","post","Update","displayOwner","d","findClientIdByName","find","changeOwner","client","changeEmail","_callee2","_context2","email","changeSold","_callee3","_context3","ClientInput","clients","list","displayDataList","Actions_Update","Actions","Actions_ClientInput","Actions_Add","App","BrowserRouter","Link","to","Route","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.96136c78.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport '../../App.css';\r\n\r\nclass ColumnHeaders extends Component {\r\n  render() {\r\n    return (\r\n        <div className=\"App\">\r\n            <div className=\"columnHeaders Y head\" >\r\n            <span className=\"clientName\">Name</span>\r\n            <span className=\"clientSurname\">Surname</span>\r\n            <span className=\"clientCountry\">Country</span>\r\n            <span className=\"clientContact\">First Contact</span>\r\n            <span className=\"clientEmail\">Email</span>\r\n            <span className=\"clientSold\">Sold</span>\r\n            <span className=\"clientOwner\">Owner</span>\r\n            </div>\r\n        </div>\r\n      \r\n    );\r\n  }\r\n}\r\n\r\nexport default ColumnHeaders;\r\n","import React, { Component } from 'react';\r\nimport '../../App.css';\r\nvar axios = require('axios');\r\n \r\nclass Row extends Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      popup: false,\r\n      name: \"\",\r\n      surname: \"\",\r\n      country: \"\"\r\n    }\r\n  }\r\n  componentDidMount(){\r\n    this.setState({ name: this.props.row.name.split(\" \")[0] })\r\n    this.setState({ surname: this.props.row.name.split(\" \")[1] })\r\n    this.setState({ country: this.props.row.country })\r\n  }\r\n  updateText = (event) => {\r\n    this.setState({\r\n      [event.target.className]: event.target.value\r\n    })\r\n  }\r\n  \r\n  popUp = () => {\r\n    this.setState({popup: !this.state.popup})\r\n  }\r\n  updateClient = async () => {\r\n    if (!this.state.name || !this.state.surname || !this.state.country)\r\n    {\r\n      alert('You must enter all 3 fields.')\r\n      this.popUp();\r\n      return;\r\n    }\r\n    let clientId = this.props.row._id;\r\n    let country = this.state.country;\r\n    country= country.charAt(0).toUpperCase() + country.slice(1);\r\n    let name = this.state.name;\r\n    name= name.charAt(0).toUpperCase() + name.slice(1);\r\n    let surname = this.state.surname;\r\n    surname= surname.charAt(0).toUpperCase() + surname.slice(1);\r\n    name=name+\" \"+surname;\r\n    await axios.put(`/client/update/${clientId}`, { name: name, country:country });\r\n    this.updateClientScreen(name, country);\r\n    alert('The client has been updated.')\r\n    this.popUp();\r\n  }\r\n  updateClientScreen =(name, country)=>{\r\n    this.props.row.name=name;\r\n    this.props.row.country=country;\r\n  }\r\n\r\n  render() {\r\n    \r\n    let r=this.props.row;\r\n    let name = r.name.split(\" \");\r\n    let date = r.firstContact;\r\n    date = date.charAt(8) + date.charAt(9) + \"/\" + date.charAt(5) + date.charAt(6) + \"/\" + date.charAt(0) + date.charAt(1) + date.charAt(2) + date.charAt(3)\r\n    return (\r\n      <div className=\"App\">\r\n        <div className=\"columnHeaders\" onClick={this.popUp}>\r\n          <span className=\"clientName\">{name[0]}</span>\r\n          <span className=\"clientSurname\">{name[1]}</span>\r\n          <span className=\"clientCountry\">{r.country}</span>\r\n          <span className=\"clientContact\">{date}</span>\r\n          <span className=\"clientEmail\">{r.emailType ? r.emailType : \"-\"}</span>\r\n          <span className=\"clientSold\">{r.sold ? \"✓\" : \"-\"}</span>\r\n          <span className=\"clientOwner\">{r.owner}</span>\r\n        </div>\r\n\r\n      {this.state.popup ? \r\n        <div className=\"outterPop\">\r\n        <div className=\"pop-up\">\r\n          <p className=\"popName\">Name: </p><input type=\"text\" className=\"name\" defaultValue={this.state.name} onChange={this.updateText} />\r\n          <p className=\"popSur\">Surname: </p><input type=\"text\" className=\"surname\" defaultValue={this.state.surname} onChange={this.updateText} />\r\n          <p className=\"popCount\">Country: </p><input type=\"text\" className=\"country\" defaultValue={this.state.country} onChange={this.updateText} />\r\n          <button onClick={this.popUp} className=\"closePop\">X</button>\r\n          <button className=\"updateClient\" onClick={this.updateClient}>Update</button>\r\n        </div>\r\n      </div>\r\n        \r\n        : null}\r\n      \r\n        \r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default Row;\r\n","import React, { Component } from 'react';\r\nimport '../../App.css';\r\nimport Row from './Row'\r\nvar axios = require('axios');\r\n\r\nclass Rows extends Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      data: []\r\n    }\r\n  }\r\n   componentDidMount= async ()=> {\r\n      let data= await axios.get('/clients');\r\n      this.setState({ data: data.data })\r\n  }\r\n\r\n  searchFits = (row)=>{\r\n    let search= this.props.search.toLowerCase();\r\n    let select=this.props.select;\r\n    let finds;\r\n    if (select == \"surname\"){finds= row.name.split(\" \")[1].toLowerCase();}\r\n    else if (select == \"name\"){finds= row.name.split(\" \")[0].toLowerCase();}\r\n    else {finds=row.country.toLowerCase();}\r\n    return (finds.includes(search))\r\n  }\r\n  \r\n  displayData = () => {\r\n    let afterSearch=this.state.data.filter(r=> this.searchFits(r))\r\n    return afterSearch.map(r => {\r\n      return (<Row row={r}/>)\r\n    })\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        {this.displayData()}\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default Rows;\r\n","import React, { Component } from 'react';\r\nimport '../../App.css';\r\nimport ColumnHeaders from './ColumnHeaders'\r\nimport Rows from './Rows'\r\n\r\n\r\nclass Clients extends Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      search: \"\",\r\n      select: \"name\"\r\n    }\r\n  }\r\n  updateText = (event) => {\r\n    this.setState({\r\n      [event.target.className]: event.target.value\r\n    })\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <input type=\"text\" className=\"search\" value={this.state.search} placeholder=\"Search\" onChange={this.updateText} />\r\n        <select className=\"select\" onChange={this.updateText}>\r\n          <option value=\"name\">Name</option>\r\n          <option value=\"surname\">Surname</option>\r\n          <option value=\"country\">Country</option>\r\n        </select>\r\n        <ColumnHeaders />\r\n        <Rows search={this.state.search} select={this.state.select}/>\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default Clients;\r\n","import React, { Component } from 'react';\r\nimport '../App.css';\r\n\r\nclass Analytics extends Component {\r\n  render() {\r\n    return (\r\n        <div className=\"App\">\r\n        Analytics\r\n        </div>\r\n      \r\n    );\r\n  }\r\n}\r\n\r\nexport default Analytics;\r\n","import React, { Component } from 'react';\r\nimport '../../App.css';\r\nvar axios = require('axios');\r\n\r\n\r\nclass Add extends Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      owner: \"\",\r\n      name: \"\",\r\n      surname: \"\",\r\n      country: \"\", \r\n      id: 0\r\n    }\r\n  }\r\n  updateText = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    })\r\n  }\r\n  addClient = async ()=>{\r\n    let name = this.state.name;\r\n    name= name.charAt(0).toUpperCase() + name.slice(1);\r\n    let surname = this.state.surname;\r\n    surname= surname.charAt(0).toUpperCase() + surname.slice(1);\r\n    name=name+\" \"+surname;\r\n    let country = this.state.country;\r\n    country= country.charAt(0).toUpperCase() + country.slice(1);    \r\n    let owner = this.state.owner;\r\n    owner= owner.charAt(0).toUpperCase() + owner.slice(1);   \r\n    let id=this.state.id;\r\n    if (!name || !surname || !country || !owner){\r\n      alert(\"must fill out all the fields.\")\r\n      return;\r\n    }\r\n    await axios.post('/actions/add', {_id: id, name:name, country:country, owner:owner, firstContact:\"2018-03-04T22:00:00.000Z\", sold:false, emailType:null});\r\n    id++;\r\n    this.setState({id: id})\r\n  }\r\n  render() {\r\n    return (\r\n        <div className=\"App\">\r\n        <p className=\"line\">____________________________________________</p>\r\n          <h3 className=\"leftUpdate\">ADD</h3>       \r\n          <p className=\"leftUpdate\">First name: <input type=\"text\" name=\"name\" onChange={this.updateText} /></p>\r\n          <p className=\"leftUpdate\">Surname: <input type=\"text\" name=\"surname\" onChange={this.updateText} /></p>\r\n          <p className=\"leftUpdate\">Country: <input type=\"text\" name=\"country\" onChange={this.updateText} /></p>\r\n          <p className=\"leftUpdate\">Owner: <input type=\"text\" name=\"owner\" onChange={this.updateText} /></p>\r\n          <button className=\"addClient leftUpdate\" onClick={this.addClient}>Add New Client</button> <p></p>\r\n        </div>\r\n\r\n      \r\n    );\r\n  }\r\n}\r\n\r\nexport default Add;\r\n","import React, { Component } from 'react';\r\nimport '../../App.css';\r\nvar axios = require('axios');\r\n\r\nclass Update extends Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      data: [],\r\n      owner: \"\",\r\n      email: \"\"\r\n    }\r\n  }\r\n  async componentDidMount() {\r\n    let data = await axios.get('/actions');\r\n    this.setState({ data: data.data })\r\n  }\r\n  updateText = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    })\r\n  }\r\n\r\n  displayOwner = () => {\r\n    return this.state.data.map(d => {\r\n      return (\r\n        <option className=\"owner\" value={d.owner}>{d.owner}</option>\r\n      )\r\n    })\r\n  }\r\n  findClientIdByName = (name) => {\r\n    let c = this.state.data.find(d => { return d.name == name });\r\n    return (c._id);\r\n  }\r\n  changeOwner = async () => {\r\n    if (!this.props.client || !this.state.owner)\r\n    {\r\n      alert('You must enter a client name and owner.')\r\n      return;\r\n    }\r\n    const clientId = this.findClientIdByName(this.props.client);\r\n    await axios.put(`/actions/owner/${clientId}`, { owner: this.state.owner });\r\n    alert('The client has been updated.')\r\n  }\r\n  changeEmail = async () => {\r\n    if (!this.props.client || !this.state.email)\r\n    {\r\n      alert('You must enter a client name and email type.')\r\n      return;\r\n    }\r\n    const clientId = this.findClientIdByName(this.props.client);\r\n    await axios.put(`/actions/email/${clientId}`, { emailType: this.state.email });\r\n    alert('The client has been updated.')    \r\n  }\r\n  changeSold = async () => {\r\n    if (!this.props.client)\r\n    {\r\n      alert('You must enter a client name.')\r\n      return;\r\n    }\r\n    const clientId = this.findClientIdByName(this.props.client);\r\n    await axios.put(`/actions/sold/${clientId}`);\r\n    alert('The client has been updated.')\r\n  }\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <p className=\"pLeft\">Transfer ownership to\r\n                <select className=\"owners\" name=\"owner\" onChange={this.updateText}>\r\n            {this.displayOwner()}\r\n          </select>\r\n          <span className=\"transfer\" onClick={this.changeOwner}>TRANSFER</span>\r\n        </p>\r\n        <p className=\"pLeft\">Send email:\r\n                <select className=\"emailTypeDrop\" name=\"email\" onChange={this.updateText}>\r\n            <option value='A'>A</option>\r\n            <option value='B'>B</option>\r\n            <option value='C'>C</option>\r\n            <option value='D'>D</option>\r\n          </select>\r\n          <span className=\"send\" onClick={this.changeEmail}>SEND</span>\r\n        </p>\r\n        <p className=\"pLeft\">Declare sale!\r\n           <span className=\"declare\" onClick={this.changeSold}>DECLARE</span>\r\n        </p>\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default Update;\r\n","import React, { Component } from 'react';\r\nimport '../../App.css';\r\nimport Update from './Update'\r\n\r\nvar axios = require('axios');\r\n\r\nclass ClientInput extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n          data: [],\r\n          clients: \"\"\r\n        }\r\n      }\r\n    async componentDidMount (){\r\n        let data = await axios.get('/actions');\r\n        this.setState({ data: data.data })\r\n    }\r\n    updateText = (event) => {\r\n        this.setState({\r\n          [event.target.name]: event.target.value\r\n        })\r\n      }\r\n    displayDataList(){\r\n        return this.state.data.map(d =>{\r\n            return (\r\n              <option value={d.name} className=\"clientOption\" >{d.name}</option>\r\n            )\r\n        })\r\n    }\r\n  render() {\r\n    return (\r\n        <div className=\"App\">\r\n            <h3 className=\"leftUpdate update\">UPDATE</h3>        \r\n            <p className=\"leftUpdate\">Client: \r\n            <input list=\"clients\" name=\"clients\" className=\"updateClientName\" placeholder=\"Client Name\"onChange={this.updateText} value={this.state.clients}/>\r\n            <datalist id=\"clients\">\r\n            {this.displayDataList()}\r\n            </datalist></p>\r\n            <Update client={this.state.clients}/>\r\n        </div>\r\n      \r\n    );\r\n  }\r\n}\r\n\r\nexport default ClientInput;\r\n","import React, { Component } from 'react';\r\nimport '../../App.css';\r\nimport Add from './Add'\r\nimport ClientInput from './ClientInput'\r\n\r\nclass Actions extends Component {\r\n  render() {\r\n    return (\r\n        <div className=\"App\">\r\n          <ClientInput />\r\n          <Add />\r\n        </div>\r\n      \r\n    );\r\n  }\r\n}\r\n\r\nexport default Actions;\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Link} from 'react-router-dom';\nimport Clients from './components/Clients/Clients'\nimport Analytics from './components/Analytics'\nimport Actions from './components/Actions/Actions'\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n      <div className=\"App\">\n      <div className=\"nav\">\n      {<Link to=\"/clients\"><span className=\"navClient\">Clients</span></Link>}\n        {<Link to=\"/actions\"><span className=\"navActions\">Actions</span></Link>}\n        {<Link to=\"/analytics\"><span className=\"navAnalytics\">Analytics</span></Link>}\n        </div>\n        \n        {<Route path=\"/clients\" exact component={Clients}/>}\n        {<Route path=\"/actions\" exact component={Actions}/>}\n        {<Route path=\"/analytics\" exact component={Analytics}/>}\n\n      </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}